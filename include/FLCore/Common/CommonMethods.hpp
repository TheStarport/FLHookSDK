#pragma once

#include <FLCore/Common/Unknown.hpp>
#include <FLCore/FLCoreDefs.hpp>

IMPORT bool operator!=(const Rect&, const Rect&);

IMPORT void AppendMissionLogData(const FmtStr*, unsigned char*&, int&, int);
IMPORT unsigned int Arch2Good(unsigned int);
IMPORT void BaseDataList_destroy();
IMPORT BaseDataList* BaseDataList_get();
IMPORT void BaseDataList_load();
IMPORT void BaseDataList_load_market_data(const char*);
IMPORT void BuildDirectory(const char*);
IMPORT float CHATTER_MAX_DIST;
IMPORT float CHATTER_MAX_DIST_ATTEN;
IMPORT float CHATTER_START_ATTEN;
IMPORT float COLLISION_DAMAGE_FACTOR;
IMPORT int COMM_CONFLICT_PRIORITY_CUTOFF;
IMPORT float COMM_PLAYER_FAR_DIST;
IMPORT float COMM_PLAYER_FAR_DIST_ATTEN;
IMPORT class Behavior* CREATE_BEHAVIOR(int);
IMPORT void CleanUpDatabases();
IMPORT void CompoundInstanceAnalyze(long, void (*)(long, void*), void*);
IMPORT int CompoundInstanceCount(long);
IMPORT long CompoundInstanceFindFirstName(long, const char*);
IMPORT void CompoundInstanceList(long, int*, long**);
IMPORT void ComputeExplosiveImpulses(long, Vector&, Vector&, Vector&);
IMPORT bool CostumeGenderAdjust(int*, int);
IMPORT bool Costume_is_equal(const struct Costume&, const struct Costume&);
IMPORT unsigned int CreateID(const char*);

IMPORT float Csys_error(const Csys&, const Csys&);
IMPORT Csys Csys_identity();
IMPORT Csys Csys_init(const Vector&, const Matrix&);
IMPORT Csys Csys_interpolate(Csys, Csys, float);

IMPORT void DAEngine_create_filesystem(const char*, struct IFileSystem**, const char*);
IMPORT void DAEngine_release_filesystem(IFileSystem**);
IMPORT Csys DALib_Engine_get_csys(long);
IMPORT void DALib_Engine_set_csys(long, const Csys&);

IMPORT ID_String DEATH_COMM_FUSE;
IMPORT double DaysPerSecond;
IMPORT void DebugPrint(const char*, ...);
IMPORT unsigned int DecodeType(const char*);
IMPORT Matrix EulerMatrix(const Vector&);
IMPORT void ExtractMissionLogData(FmtStr*, unsigned char*&, int&);
IMPORT float FIRE_FAILED_DELAY;
IMPORT ID_String FIRE_FAILED_SOUND;

struct HardpointInfo;
IMPORT long FindChild(long, const char*);
IMPORT bool FindHardpoint(long, const char*, long&);
IMPORT bool FindHardpoint_OS(long, const char*, long&, HardpointInfo&);
IMPORT bool FindHardpoint_PS(long, const char*, long&, HardpointInfo&);
IMPORT void FreeCostumeDescriptions();
IMPORT void FreeSpatial(ISpatialPartition*);
IMPORT bool FrustumCull(const Geometry::Frustum&, const Universe::IZone*);
IMPORT IBehaviorManager* GetBehaviorManager(IObjRW*);
IMPORT const CostumeDescriptions* GetCostumeDescriptions();
IMPORT Matrix GetDirectionMatrix(const Transform&, const Vector&);
IMPORT void GetFileSysPath(char*, const char*, IFileSystem*);
IMPORT const char* GetFullFilename(const char*);
IMPORT long GetRoot(long);
IMPORT CObject* GetRoot(const CObject*);
IMPORT bool GetScreenShotPath(char* const);
IMPORT float GetSphereIntersectVol(float, float, float);
IMPORT bool GetUserDataPath(char* const);
IMPORT bool GetUserLocalDataPath(char* const);
IMPORT void GiveClientRunPermission();
IMPORT void GiveServerRunPermission();
IMPORT unsigned int Good2Arch(unsigned int);
IMPORT void GoodList_destroy();
IMPORT GoodInfoList* GoodList_get();
IMPORT void GoodList_load(const char*);
IMPORT bool HardpointPosition(long, const char*, Vector*, Matrix*);
IMPORT bool HardpointPositionA(long, const char*, Vector*, Matrix*);
IMPORT void HardpointToObject(long, HardpointInfo&);
IMPORT void HardpointToWorld(long, HardpointInfo&);
IMPORT void HexToWide(const char*, unsigned short*);
IMPORT bool InitializeRichText(int);
IMPORT bool IsDescendant(long, long);
IMPORT bool IsMPServer();
IMPORT float JETTISONED_CARGO_VELOCITY;
IMPORT bool JointEnumCallback(long, long, const struct JointInfo*, void*);
IMPORT float LOOT_OWNER_SAFE_TIME;
IMPORT float LOOT_UNSEEN_LIFE_TIME;
IMPORT float LOOT_UNSEEN_RADIUS;
IMPORT bool LayoutRichText(TextRenderContext&, const RenderDisplayList&, int, RenderDisplayList&, int, int, bool, int*, bool);
IMPORT void LoadBodypartDescriptions(const char*);
IMPORT void LoadCostumeDescriptions(const char*);
IMPORT Matrix LookMatrix(const Vector&);
IMPORT Matrix LookMatrixYup(const Vector&);
IMPORT int MAX_PLAYER_AMMO;
IMPORT float MUSIC_CROSS_FADE_DELAY;
IMPORT float MUZZLE_CONE_ANGLE;
IMPORT unsigned short MakeId(const char*);
IMPORT unsigned int MakeLocationID(unsigned int, const char*);
IMPORT ISpatialPartition* NewSpatial(const char*);
IMPORT int NumHardpoints(long, bool);
IMPORT float PLAYER_ATTACHED_EQUIP_HIT_PTS_SCALE;
IMPORT float PLAYER_COLLISION_GROUP_HIT_PTS_SCALE;
IMPORT int PackMissionLogData(int, const FmtStr*, unsigned char*, int);
IMPORT _GUID* ParseGUID(const char*, _GUID*);
IMPORT double ParseNumber(const char*);
IMPORT void PetalDB_destroy();
IMPORT const PetalInterfaceDatabase* PetalDB_get();
IMPORT void PetalDB_load(const char*);
IMPORT bool PlayerTrailAvailable;
IMPORT Rect RECT_to_Rect(const tagRECT&);
IMPORT Vector RandomVector(float);
IMPORT Vector random_inside_box(float, float, float);
IMPORT Vector random_inside_cylinder(float, float);
IMPORT Vector random_inside_ellipsoid(float, float, float);
IMPORT Vector random_inside_ring(float, float, float);
IMPORT Vector random_inside_sphere(float);
IMPORT Vector random_on_unit_sphere();
IMPORT Vector random_sphere_constrained(const Vector&, float);
IMPORT Vector random_sphere_constrained_2(const Vector&, float, float);
IMPORT bool ReadConstants(const char*);
IMPORT tagRECT Rect_to_RECT(const Rect&);
IMPORT struct ViewRect Rect_to_ViewRect(const Rect&);
IMPORT void RefreshLoadingProgress();
IMPORT void RegisterLoadingScreen(class ILoadingScreen*);
IMPORT void ReinitializeRichTextFonts();
IMPORT Matrix RotateMatrix(const Vector&);
//@@@TODO IMPORT unsigned int const  SMM_CHANGE_STATE;
//@@@TODO IMPORT unsigned int const  SMM_TIMEOUT;
IMPORT ID_String SND_CARGO_JETTISONED;
//@@@TODO IMPORT unsigned short const  SUBOBJ_ID_NONE;
//@@@TODO IMPORT unsigned short const  SUBOBJ_ID_POWER;
//@@@TODO IMPORT unsigned short const  SUBOBJ_ID_ROOT;
IMPORT unsigned long SafeWaitForSingleObject(void*, unsigned long);
IMPORT void SetIsMPServer(bool);
IMPORT void SetMultPlayer(bool);
IMPORT void SetStandardFont(int, const TextRenderContext::FontDesc&);
IMPORT void ShutdownRichText();
IMPORT bool SinglePlayer();
IMPORT ID_String SpaceflightLocationID;
IMPORT bool SphereCull(const Geometry::Sphere&, const Universe::IZone*);
IMPORT char* StringAlloc(const char*, bool);
IMPORT const char* StringIndex(const char*, unsigned int);
IMPORT void StringShutdown();
IMPORT unsigned long ThornGetRenderType(const struct ThornEntity*, const char*);
IMPORT bool ThornGetUserFloat(struct IScriptEngine*, int, const char*, float*);
IMPORT bool ThornGetUserInt(IScriptEngine*, int, const char*, int*);
IMPORT const char* ThornGetUserString(IScriptEngine*, int, const char*);
IMPORT void ThornScriptDestroy(IScriptEngine**);
IMPORT Csys ThornScriptGetCsys(IScriptEngine*, const char*);
IMPORT IScriptEngine* ThornScriptLoad(const char*);
IMPORT void ToggleIceCap(bool);
IMPORT double ValueNum(const char*, unsigned int);
IMPORT Rect ViewRect_to_Rect(const ViewRect&);
IMPORT float WALLA_MAX_DIST;
IMPORT float WALLA_MAX_DIST_ATTEN;
IMPORT int WALLA_PRIORITY_CUTOFF;
IMPORT float WALLA_START_ATTEN;
IMPORT void WaitForClientRunPermission();
IMPORT void WaitForServerRunPermission();
IMPORT void WideToHex(const unsigned short*, char*);

IMPORT int add_good_item(unsigned int, int, float, float, bool, GoodDescList*);
IMPORT bool arch_is_combinable(unsigned int);
IMPORT const unsigned short* filetime_to_wstring(_FILETIME const&);
//@@@ IMPORT struct GoodDesc *  find_good_item(struct GoodDescList *,unsigned int,class MetaNode<struct GoodDesc> * *);
IMPORT long get_projected_bounding_box(struct ICamera*, const Vector&, float, ViewRect*, float&);
IMPORT long get_projected_bounding_sphere(ICamera*, const Vector&, float, float&, float&, float&, float&);
IMPORT int lex_compare(const RenderDisplayList&, const RenderDisplayList&, bool);
IMPORT const char* malloc_strcpy(char**, const char*);
IMPORT void malloc_strfree(char**);
IMPORT const unsigned short* malloc_wstrcpy(unsigned short**, const unsigned short*);
IMPORT void malloc_wstrfree(unsigned short**);
IMPORT Rect rect_intersect(const Rect&, const Rect&);
IMPORT Rect rect_union(const Rect&, const Rect&);
IMPORT int remove_good_item(unsigned int, int, GoodDescList*);
IMPORT char* safe_strcat(char*, int, const char*);
IMPORT char* safe_strcpy(char*, int, const char*);
IMPORT unsigned short* safe_wcscpy(unsigned short*, int, const unsigned short*);
IMPORT unsigned long select_option_from_string(char*, const option_spec* const, int, const char*);
IMPORT bool strequal(const char*, const char*);

inline CObject* BaseWatcherToCObject(BaseWatcher* basewatcher) { return reinterpret_cast<CObject*>(basewatcher) + 2; }
inline IObjRW* BaseWatcherToCIObjRW(BaseWatcher* basewatcher) { return reinterpret_cast<IObjRW*>(basewatcher) - 2; };
